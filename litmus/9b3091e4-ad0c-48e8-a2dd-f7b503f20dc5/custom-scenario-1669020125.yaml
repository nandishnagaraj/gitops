apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  labels:
    cluster_id: 9f2d58e8-31ea-4850-9eeb-a34ead754e75
    subject: custom-scenario-1669020125_litmus
    workflow_id: 1d8d5b9f-9dae-48e0-8879-b6f4baefe851
    workflows.argoproj.io/controller-instanceid: 9f2d58e8-31ea-4850-9eeb-a34ead754e75
  name: custom-scenario-1669020125
  namespace: litmus
spec:
  arguments:
    parameters:
    - name: adminModeNamespace
      value: litmus
    - name: APP_NAMESPACE
      value: k1launch
    - name: APP_LABEL
      value: app.kubernetes.io/instance=k1launch
    - name: APP_KIND
      value: ""
    - name: TOTAL_CHAOS_DURATION
      value: "300"
    - name: RESET_TIMEOUT
      value: "30000"
    - name: TARGET_SERVICE_PORT
      value: "8443"
    - name: TARGET_PODS
      value: ""
    - name: CONTAINER_RUNTIME
      value: containerd
    - name: SOCKET_PATH
      value: /var/run/containerd/containerd.sock
    - name: PODS_AFFECTED_PERC
      value: "100"
    - name: TOXICITY
      value: "40"
    - name: DOMAIN
      value: 35.245.254.196
  entrypoint: custom-chaos
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: argo-chaos
  templates:
  - inputs: {}
    metadata: {}
    name: custom-chaos
    outputs: {}
    steps:
    - - arguments: {}
        name: install-chaos-experiments
        template: install-chaos-experiments
    - - arguments: {}
        name: pod-http-reset-peer-bm5
        template: pod-http-reset-peer-bm5
  - container:
      args:
      - kubectl apply -f /tmp/pod-http-reset-peer-bm5.yaml -n {{workflow.parameters.adminModeNamespace}}
        &&  sleep 30
      command:
      - sh
      - -c
      image: litmuschaos/k8s:2.12.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-http-reset-peer-bm5
        path: /tmp/pod-http-reset-peer-bm5.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: >
                it injects chaos into the pod which stops outgoing http requests by
                resetting the TCP connection and then reverts back to the original state
                after a specified duration
            kind: ChaosExperiment
            metadata:
              name: pod-http-reset-peer
              labels:
                name: pod-http-reset-peer
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: 2.12.0
            spec:
              definition:
                scope: Namespaced
                permissions:
                  - apiGroups:
                      - ""
                    resources:
                      - pods
                    verbs:
                      - create
                      - delete
                      - get
                      - list
                      - patch
                      - update
                      - deletecollection
                  - apiGroups:
                      - ""
                    resources:
                      - events
                    verbs:
                      - create
                      - get
                      - list
                      - patch
                      - update
                  - apiGroups:
                      - ""
                    resources:
                      - configmaps
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - ""
                    resources:
                      - pods/log
                    verbs:
                      - get
                      - list
                      - watch
                  - apiGroups:
                      - ""
                    resources:
                      - pods/exec
                    verbs:
                      - get
                      - list
                      - create
                  - apiGroups:
                      - apps
                    resources:
                      - deployments
                      - statefulsets
                      - replicasets
                      - daemonsets
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - apps.openshift.io
                    resources:
                      - deploymentconfigs
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - ""
                    resources:
                      - replicationcontrollers
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - argoproj.io
                    resources:
                      - rollouts
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - batch
                    resources:
                      - jobs
                    verbs:
                      - create
                      - list
                      - get
                      - delete
                      - deletecollection
                  - apiGroups:
                      - litmuschaos.io
                    resources:
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                image: litmuschaos/go-runner:2.12.0
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name pod-http-reset-peer
                command:
                  - /bin/bash
                env:
                  - name: TARGET_CONTAINER
                    value: ""
                  - name: LIB_IMAGE
                    value: litmuschaos/go-runner:2.12.0
                  - name: RESET_TIMEOUT
                    value: "0"
                  - name: TARGET_SERVICE_PORT
                    value: "80"
                  - name: PROXY_PORT
                    value: "20000"
                  - name: NETWORK_INTERFACE
                    value: eth0
                  - name: TOTAL_CHAOS_DURATION
                    value: "60"
                  - name: RAMP_TIME
                    value: ""
                  - name: LIB
                    value: litmus
                  - name: PODS_AFFECTED_PERC
                    value: ""
                  - name: TARGET_PODS
                    value: ""
                  - name: CONTAINER_RUNTIME
                    value: docker
                  - name: SOCKET_PATH
                    value: /var/run/docker.sock
                  - name: NODE_LABEL
                    value: ""
                  - name: SEQUENCE
                    value: parallel
                labels:
                  name: pod-http-reset-peer
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/version: 2.12.0
    metadata: {}
    name: install-chaos-experiments
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-pod-http-reset-peer-bm5.yaml
      - -saveName=/tmp/engine-name
      image: litmuschaos/litmus-checker:2.12.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-http-reset-peer-bm5
        path: /tmp/chaosengine-pod-http-reset-peer-bm5.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              generateName: pod-http-reset-peer-bm5
              labels:
                workflow_run_id: "{{workflow.uid}}"
            spec:
              engineState: active
              appinfo:
                appns: "{{workflow.parameters.APP_NAMESPACE}}"
                applabel: "{{workflow.parameters.APP_LABEL}}"
                appkind: "{{workflow.parameters.APP_KIND}}"
              chaosServiceAccount: litmus-admin
              experiments:
                - name: pod-http-reset-peer
                  spec:
                    components:
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "{{workflow.parameters.TOTAL_CHAOS_DURATION}}"
                        - name: RESET_TIMEOUT
                          value: "{{workflow.parameters.RESET_TIMEOUT}}"
                        - name: TARGET_SERVICE_PORT
                          value: "{{workflow.parameters.TARGET_SERVICE_PORT}}"
                        - name: TARGET_PODS
                          value: "{{workflow.parameters.TARGET_PODS}}"
                        - name: CONTAINER_RUNTIME
                          value: "{{workflow.parameters.CONTAINER_RUNTIME}}"
                        - name: SOCKET_PATH
                          value: "{{workflow.parameters.SOCKET_PATH}}"
                        - name: PODS_AFFECTED_PERC
                          value: "{{workflow.parameters.PODS_AFFECTED_PERC}}"
                        - name: TOXICITY
                          value: "{{workflow.parameters.TOXICITY}}"
                    probe:
                      - name: Launch-server-start-probe
                        type: httpProbe
                        mode: SOT
                        runProperties:
                          probeTimeout: 20
                          retry: 1
                          interval: 20
                          stopOnFailure: false
                        httpProbe/inputs:
                          url: https://hcl-launch-server.{{workflow.parameters.DOMAIN}}.nip.io/
                          insecureSkipVerify: true
                          responseTimeout: 3000
                          method:
                            get:
                              criteria: ==
                              responseCode: "200"
                      - name: Launch-server-continuous-probe
                        type: httpProbe
                        mode: Continuous
                        runProperties:
                          probeTimeout: 30
                          retry: 7
                          interval: 30
                          stopOnFailure: false
                        httpProbe/inputs:
                          url: https://hcl-launch-server.{{workflow.parameters.DOMAIN}}.nip.io/
                          insecureSkipVerify: true
                          responseTimeout: 3000
                          method:
                            get:
                              criteria: ==
                              responseCode: "200"
                      - name: Launch-server-end-probe
                        type: httpProbe
                        mode: EOT
                        runProperties:
                          probeTimeout: 20
                          retry: 1
                          interval: 20
                          stopOnFailure: false
                        httpProbe/inputs:
                          url: https://hcl-launch-server.{{workflow.parameters.DOMAIN}}.nip.io/
                          insecureSkipVerify: true
                          responseTimeout: 3000
                          method:
                            get:
                              criteria: ==
                              responseCode: "200"
              annotationCheck: "false"
    metadata:
      labels:
        weight: "10"
    name: pod-http-reset-peer-bm5
    outputs: {}
status:
  finishedAt: null
  startedAt: null
