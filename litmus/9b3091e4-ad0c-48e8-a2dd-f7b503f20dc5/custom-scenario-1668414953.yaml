apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  labels:
    cluster_id: 9f2d58e8-31ea-4850-9eeb-a34ead754e75
    subject: custom-scenario-1668414953_litmus
    workflow_id: c7a9cff1-27f8-4a6e-8f00-bad7ce281ab7
    workflows.argoproj.io/controller-instanceid: 9f2d58e8-31ea-4850-9eeb-a34ead754e75
  name: custom-scenario-1668414953
  namespace: litmus
spec:
  arguments:
    parameters:
    - name: adminModeNamespace
      value: litmus
    - name: APP_NAMESPACE
      value: k1launch
    - name: APP_LABEL
      value: app.kubernetes.io/instance=k1launch
    - name: APP_KIND
      value: ""
    - name: TOTAL_CHAOS_DURATION
      value: "300"
    - name: NETWORK_LATENCY
      value: "5000"
    - name: JITTER
      value: "5000"
    - name: CONTAINER_RUNTIME
      value: containerd
    - name: SOCKET_PATH
      value: /var/run/containerd/containerd.sock
    - name: PODS_AFFECTED_PERC
      value: "100"
    - name: DOMAIN
      value: 34.150.135.6
  entrypoint: custom-chaos
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: argo-chaos
  templates:
  - inputs: {}
    metadata: {}
    name: custom-chaos
    outputs: {}
    steps:
    - - arguments: {}
        name: install-chaos-experiments
        template: install-chaos-experiments
    - - arguments: {}
        name: pod-network-latency-6d2
        template: pod-network-latency-6d2
  - container:
      args:
      - kubectl apply -f /tmp/pod-network-latency-6d2.yaml -n {{workflow.parameters.adminModeNamespace}}
        &&  sleep 30
      command:
      - sh
      - -c
      image: litmuschaos/k8s:2.12.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-network-latency-6d2
        path: /tmp/pod-network-latency-6d2.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                Injects network latency on pods belonging to an app deployment
            kind: ChaosExperiment
            metadata:
              name: pod-network-latency
              labels:
                name: pod-network-latency
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: 2.12.0
            spec:
              definition:
                scope: Namespaced
                permissions:
                  - apiGroups:
                      - ""
                    resources:
                      - pods
                    verbs:
                      - create
                      - delete
                      - get
                      - list
                      - patch
                      - update
                      - deletecollection
                  - apiGroups:
                      - ""
                    resources:
                      - events
                    verbs:
                      - create
                      - get
                      - list
                      - patch
                      - update
                  - apiGroups:
                      - ""
                    resources:
                      - configmaps
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - ""
                    resources:
                      - pods/log
                    verbs:
                      - get
                      - list
                      - watch
                  - apiGroups:
                      - ""
                    resources:
                      - pods/exec
                    verbs:
                      - get
                      - list
                      - create
                  - apiGroups:
                      - apps
                    resources:
                      - deployments
                      - statefulsets
                      - replicasets
                      - daemonsets
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - apps.openshift.io
                    resources:
                      - deploymentconfigs
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - ""
                    resources:
                      - replicationcontrollers
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - argoproj.io
                    resources:
                      - rollouts
                    verbs:
                      - list
                      - get
                  - apiGroups:
                      - batch
                    resources:
                      - jobs
                    verbs:
                      - create
                      - list
                      - get
                      - delete
                      - deletecollection
                  - apiGroups:
                      - litmuschaos.io
                    resources:
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                image: litmuschaos/go-runner:2.12.0
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name pod-network-latency
                command:
                  - /bin/bash
                env:
                  - name: TARGET_CONTAINER
                    value: ""
                  - name: NETWORK_INTERFACE
                    value: eth0
                  - name: LIB_IMAGE
                    value: litmuschaos/go-runner:2.12.0
                  - name: TC_IMAGE
                    value: gaiadocker/iproute2
                  - name: NETWORK_LATENCY
                    value: "2000"
                  - name: TOTAL_CHAOS_DURATION
                    value: "60"
                  - name: RAMP_TIME
                    value: ""
                  - name: JITTER
                    value: "0"
                  - name: LIB
                    value: litmus
                  - name: PODS_AFFECTED_PERC
                    value: ""
                  - name: TARGET_PODS
                    value: ""
                  - name: CONTAINER_RUNTIME
                    value: docker
                  - name: DESTINATION_IPS
                    value: ""
                  - name: DESTINATION_HOSTS
                    value: ""
                  - name: SOCKET_PATH
                    value: /var/run/docker.sock
                  - name: NODE_LABEL
                    value: ""
                  - name: SEQUENCE
                    value: parallel
                labels:
                  name: pod-network-latency
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/runtime-api-usage: "true"
                  app.kubernetes.io/version: 2.12.0
    metadata: {}
    name: install-chaos-experiments
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-pod-network-latency-6d2.yaml
      - -saveName=/tmp/engine-name
      image: litmuschaos/litmus-checker:2.12.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: pod-network-latency-6d2
        path: /tmp/chaosengine-pod-network-latency-6d2.yaml
        raw:
          data: "apiVersion: litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n
            \ namespace: \"{{workflow.parameters.adminModeNamespace}}\"\n  generateName:
            pod-network-latency-6d2\n  labels:\n    workflow_run_id: \"{{workflow.uid}}\"\nspec:\n
            \ engineState: active\n  appinfo:\n    appns: \"{{workflow.parameters.APP_NAMESPACE}}\"\n
            \   applabel: \"{{workflow.parameters.APP_LABEL}}\"\n    appkind: \"{{workflow.parameters.APP_KIND}}\"\n
            \ chaosServiceAccount: litmus-admin\n  experiments:\n    - name: pod-network-latency\n
            \     spec:\n        components:\n          env:\n            - name:
            TOTAL_CHAOS_DURATION\n              value: \"{{workflow.parameters.TOTAL_CHAOS_DURATION}}\"\n
            \           - name: NETWORK_LATENCY\n              value: \"{{workflow.parameters.NETWORK_LATENCY}}\"\n
            \           - name: JITTER\n              value: \"{{workflow.parameters.JITTER}}\"\n
            \           - name: CONTAINER_RUNTIME\n              value: \"{{workflow.parameters.CONTAINER_RUNTIME}}\"\n
            \           - name: SOCKET_PATH\n              value: \"{{workflow.parameters.SOCKET_PATH}}\"\n
            \           - name: PODS_AFFECTED_PERC\n              value: \"{{workflow.parameters.PODS_AFFECTED_PERC}}\"\n
            \       probe:\n          - name: Launch-server-start-probe\n            type:
            httpProbe\n            mode: SOT\n            runProperties:\n              probeTimeout:
            20\n              retry: 1\n              interval: 20\n              stopOnFailure:
            false\n            httpProbe/inputs:\n              url: https://hcl-launch-server.{{workflow.parameters.DOMAIN}}.nip.io/\n
            \             insecureSkipVerify: true\n              responseTimeout:
            3000\n              method:\n                get:\n                  criteria:
            ==\n                  responseCode: \"200\"\n          - name: Launch-server-continuous-probe\n
            \           type: httpProbe\n            mode: Continuous\n            runProperties:\n
            \             probeTimeout: 20\n              retry: 6\n              interval:
            20\n              stopOnFailure: false\n            httpProbe/inputs:\n
            \             url: https://hcl-launch-server.{{workflow.parameters.DOMAIN}}.nip.io/\n
            \             insecureSkipVerify: true\n              responseTimeout:
            3000\n              method:\n                get:\n                  criteria:
            ==\n                  responseCode: \"200\"\n          - name: Launch-server-end-probe\n
            \           type: httpProbe\n            mode: EOT\n            runProperties:\n
            \             probeTimeout: 20\n              retry: 1\n              interval:
            20\n              stopOnFailure: false\n            httpProbe/inputs:\n
            \             url: https://hcl-launch-server.{{workflow.parameters.DOMAIN}}.nip.io/\n
            \             insecureSkipVerify: true\n              responseTimeout:
            3000\n              method:\n                get:\n                  criteria:
            ==\n                  responseCode: \"200\"\n  annotationCheck: \"false\"
            \ \n"
    metadata:
      labels:
        weight: "10"
    name: pod-network-latency-6d2
    outputs: {}
status:
  finishedAt: null
  startedAt: null
