apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  labels:
    cluster_id: 61dd221f-824e-4f36-acff-a28fa3f55724
    subject: custom-scenario-1671009616_litmus
    workflow_id: 3234c27b-5b45-44d8-912a-38daf066477f
    workflows.argoproj.io/controller-instanceid: 61dd221f-824e-4f36-acff-a28fa3f55724
  name: custom-scenario-1671009616
  namespace: litmus
spec:
  arguments:
    parameters:
    - name: adminModeNamespace
      value: litmus
    - name: TOTAL_CHAOS_DURATION
      value: "300"
    - name: TARGET_NODE
      value: gke-hcllink-default-pool-7d131db4-s3q0
    - name: APP_NAMESPACE
      value: k1dx
    - name: APP_LABEL
      value: app.kubernetes.io/instance=k1dx
    - name: DOMAIN
      value: 34.86.107.240
  entrypoint: custom-chaos
  nodeSelector:
    chaos: "true"
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: argo-chaos
  templates:
  - inputs: {}
    metadata: {}
    name: custom-chaos
    outputs: {}
    steps:
    - - arguments: {}
        name: install-chaos-experiments
        template: install-chaos-experiments
    - - arguments: {}
        name: kubelet-service-kill-zei
        template: kubelet-service-kill-zei
  - container:
      args:
      - kubectl apply -f /tmp/kubelet-service-kill-zei.yaml -n {{workflow.parameters.adminModeNamespace}}
        &&  sleep 30
      command:
      - sh
      - -c
      image: litmuschaos/k8s:2.12.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: kubelet-service-kill-zei
        path: /tmp/kubelet-service-kill-zei.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                Kills the kubelet service on the application node to check the resiliency.
            kind: ChaosExperiment
            metadata:
              name: kubelet-service-kill
              labels:
                name: kubelet-service-kill
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: 2.12.0
            spec:
              definition:
                scope: Cluster
                permissions:
                  - apiGroups:
                      - ""
                    resources:
                      - pods
                    verbs:
                      - create
                      - delete
                      - get
                      - list
                      - patch
                      - update
                      - deletecollection
                  - apiGroups:
                      - ""
                    resources:
                      - events
                    verbs:
                      - create
                      - get
                      - list
                      - patch
                      - update
                  - apiGroups:
                      - ""
                    resources:
                      - configmaps
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - ""
                    resources:
                      - pods/log
                    verbs:
                      - get
                      - list
                      - watch
                  - apiGroups:
                      - ""
                    resources:
                      - pods/exec
                    verbs:
                      - get
                      - list
                      - create
                  - apiGroups:
                      - batch
                    resources:
                      - jobs
                    verbs:
                      - create
                      - list
                      - get
                      - delete
                      - deletecollection
                  - apiGroups:
                      - litmuschaos.io
                    resources:
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                  - apiGroups:
                      - ""
                    resources:
                      - nodes
                    verbs:
                      - get
                      - list
                image: litmuschaos/go-runner:2.12.0
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name kubelet-service-kill
                command:
                  - /bin/bash
                env:
                  - name: TOTAL_CHAOS_DURATION
                    value: "60"
                  - name: RAMP_TIME
                    value: ""
                  - name: LIB
                    value: litmus
                  - name: NODE_LABEL
                    value: ""
                  - name: LIB_IMAGE
                    value: ubuntu:16.04
                  - name: TARGET_NODE
                    value: ""
                labels:
                  name: kubelet-service-kill
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/service-kill: "true"
                  app.kubernetes.io/version: 2.12.0
    metadata: {}
    name: install-chaos-experiments
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-kubelet-service-kill-zei.yaml
      - -saveName=/tmp/engine-name
      image: litmuschaos/litmus-checker:2.12.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: kubelet-service-kill-zei
        path: /tmp/chaosengine-kubelet-service-kill-zei.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              generateName: kubelet-service-kill-zei
              labels:
                workflow_run_id: "{{workflow.uid}}"
            spec:
              engineState: active
              auxiliaryAppInfo: ""
              chaosServiceAccount: litmus-admin
              nodeSelector:
                chaos: "true"
              tolerations:
                - key: "chaos"
                  operator: "Equal"
                  value: "true"
                  effect: "NoSchedule"
              experiments:
                - name: kubelet-service-kill
                  spec:
                    components:
                      nodeSelector:
                        chaos: "true"
                      tolerations:
                        - key: "chaos"
                          operator: "Equal"
                          value: "true"
                          effect: "NoSchedule"
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "{{workflow.parameters.TOTAL_CHAOS_DURATION}}"
                        - name: TARGET_NODE
                          value: "{{workflow.parameters.TARGET_NODE}}"
                        - name: APP_NAMESPACE
                          value: "{{workflow.parameters.APP_NAMESPACE}}"
                        - name: APP_LABEL
                          value: "{{workflow.parameters.APP_LABEL}}"
                    probe:
                      - name: DX-Availability-SOT-probe
                        type: cmdProbe
                        mode: SOT
                        runProperties:
                          probeTimeout: 20
                          retry: 3
                          interval: 20
                          stopOnFailure: false
                        cmdProbe/inputs:
                          command: ./dxscript.sh 34.86.107.240 wpsadmin DAM test testdesc
                          source:
                            image: gcr.io/blackjack-209019/services/hcldx/hclhelmdx:latest
                            hostNetwork: false
                          comparator:
                            type: string
                            criteria: contains
                            value: "409"
                      - name: DX-Availability-Continuous-probe
                        type: cmdProbe
                        mode: Continuous
                        runProperties:
                          probeTimeout: 30
                          retry: 7
                          interval: 30
                          stopOnFailure: false
                        httpProbe/inputs: {}
                        cmdProbe/inputs:
                          command: ./dxscript.sh 34.86.107.240 wpsadmin DAM test testdesc
                          source:
                            image: gcr.io/blackjack-209019/services/hcldx/hclhelmdx:latest
                            hostNetwork: false
                          comparator:
                            type: string
                            criteria: contains
                            value: "409"
                      - name: DX-Availability-EOT-probe
                        type: cmdProbe
                        mode: EOT
                        runProperties:
                          probeTimeout: 20
                          retry: 3
                          interval: 20
                          stopOnFailure: false
                        httpProbe/inputs: {}
                        cmdProbe/inputs:
                          command: ./dxscript.sh 34.86.107.240 wpsadmin DAM test testdesc
                          source:
                            image: gcr.io/blackjack-209019/services/hcldx/hclhelmdx:latest
                            hostNetwork: false
                          comparator:
                            type: string
                            criteria: contains
                            value: "409"
              annotationCheck: "false"
    metadata:
      labels:
        weight: "10"
    name: kubelet-service-kill-zei
    outputs: {}
  tolerations:
  - effect: NoSchedule
    key: chaos
    operator: Equal
    value: "true"
status:
  finishedAt: null
  startedAt: null
