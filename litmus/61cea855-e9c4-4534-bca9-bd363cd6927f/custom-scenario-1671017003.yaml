apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  labels:
    cluster_id: 61dd221f-824e-4f36-acff-a28fa3f55724
    subject: custom-scenario-1671017003_litmus
    workflow_id: cfea2a16-5a75-4951-8b52-e90a668e7012
    workflows.argoproj.io/controller-instanceid: 61dd221f-824e-4f36-acff-a28fa3f55724
  name: custom-scenario-1671017003
  namespace: litmus
spec:
  arguments:
    parameters:
    - name: TARGET_NODE
      value: gke-hcllink-default-pool-7d131db4-bmo0
    - name: DOMAIN
      value: 35.245.150.49
    - name: APP_NAMESPACE
      value: k1bigfix
    - name: APP_LABEL
      value: app.kubernetes.io/instance=k1bigfix
    - name: TOTAL_CHAOS_DURATION
      value: "300"
    - name: adminModeNamespace
      value: litmus
  entrypoint: custom-chaos
  nodeSelector:
    chaos: "true"
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: argo-chaos
  templates:
  - inputs: {}
    metadata: {}
    name: custom-chaos
    outputs: {}
    steps:
    - - arguments: {}
        name: install-chaos-experiments
        template: install-chaos-experiments
    - - arguments: {}
        name: node-drain-xoa
        template: node-drain-xoa
  - container:
      args:
      - kubectl apply -f /tmp/node-drain-xoa.yaml -n {{workflow.parameters.adminModeNamespace}}
        |  sleep 30
      command:
      - sh
      - -c
      image: litmuschaos/k8s:2.9.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: node-drain-xoa
        path: /tmp/node-drain-xoa.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                Drain the node where application pod is scheduled
            kind: ChaosExperiment
            metadata:
              name: node-drain
              labels:
                name: node-drain
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: 2.9.0
            spec:
              definition:
                scope: Cluster
                permissions:
                  - apiGroups:
                      - ""
                    resources:
                      - pods
                    verbs:
                      - create
                      - delete
                      - get
                      - list
                      - patch
                      - update
                      - deletecollection
                  - apiGroups:
                      - ""
                    resources:
                      - events
                    verbs:
                      - create
                      - get
                      - list
                      - patch
                      - update
                  - apiGroups:
                      - ""
                    resources:
                      - configmaps
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - ""
                    resources:
                      - pods/log
                    verbs:
                      - get
                      - list
                      - watch
                  - apiGroups:
                      - ""
                    resources:
                      - pods/exec
                      - pods/eviction
                    verbs:
                      - get
                      - list
                      - create
                  - apiGroups:
                      - apps
                    resources:
                      - daemonsets
                    verbs:
                      - list
                      - get
                      - delete
                  - apiGroups:
                      - batch
                    resources:
                      - jobs
                    verbs:
                      - create
                      - list
                      - get
                      - delete
                      - deletecollection
                  - apiGroups:
                      - litmuschaos.io
                    resources:
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                  - apiGroups:
                      - ""
                    resources:
                      - nodes
                    verbs:
                      - get
                      - list
                      - patch
                image: litmuschaos/go-runner:2.9.0
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name node-drain
                command:
                  - /bin/bash
                env:
                  - name: TARGET_NODE
                    value: ""
                  - name: NODE_LABEL
                    value: ""
                  - name: TOTAL_CHAOS_DURATION
                    value: "60"
                  - name: LIB
                    value: litmus
                  - name: RAMP_TIME
                    value: ""
                labels:
                  name: node-drain
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/version: 2.9.0
    metadata: {}
    name: install-chaos-experiments
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-node-drain-xoa.yaml
      - -saveName=/tmp/engine-name
      image: litmuschaos/litmus-checker:2.9.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: node-drain-xoa
        path: /tmp/chaosengine-node-drain-xoa.yaml
        raw:
          data: "apiVersion: litmuschaos.io/v1alpha1\nkind: ChaosEngine\nmetadata:\n
            \ namespace: \"{{workflow.parameters.adminModeNamespace}}\"\n  generateName:
            node-drain-xoa\n  labels:\n    instance_id: 24b4419d-7376-4904-bab9-00556bb4aee7\n
            \   context: node-drain-xoa_k1litmus\nspec:\n  engineState: active\n  auxiliaryAppInfo:
            \"\"\n  chaosServiceAccount: litmus-admin\n  components:\n    runner:\n
            \     nodeSelector:\n        chaos: \"true\"\n      tolerations:\n        -
            key: \"chaos\"\n          operator: \"Equal\"\n          value: \"true\"\n
            \         effect: \"NoSchedule\"\n  experiments:\n    - name: node-drain\n
            \     spec:\n        components:\n          nodeSelector:\n            chaos:
            \"true\"\n          tolerations:\n            - key: \"chaos\"\n              operator:
            \"Equal\"\n              value: \"true\"\n              effect: \"NoSchedule\"\n
            \         env:\n            - name: TARGET_NODE\n              value:
            \"{{workflow.parameters.TARGET_NODE}}\"\n            - name: APP_NAMESPACE\n
            \             value: \"{{workflow.parameters.APP_NAMESPACE}}\"\n            -
            name: APP_LABEL\n              value: \"{{workflow.parameters.APP_LABEL}}\"\n
            \           - name: TOTAL_CHAOS_DURATION\n              value: \"{{workflow.parameters.TOTAL_CHAOS_DURATION}}\"\n
            \       probe: \n          - name: BIGFIX-availability-start-probe\n            type:
            httpProbe\n            mode: SOT\n            runProperties:\n              probeTimeout:
            20\n              retry: 1\n              interval: 20\n              probePollingInterval:
            1\n            httpProbe/inputs:\n              url: 'https://bigfix-webreports-0.{{workflow.parameters.DOMAIN}}.nip.io/login'\n
            \             insecureSkipVerify: true\n              responseTimeout:
            5000\n              method:\n                get:\n                  criteria:
            '=='\n                  responseCode: '200'\n          - name: BIGFIX-availability-continuous-probe\n
            \           type: httpProbe\n            mode: Continuous\n            runProperties:\n
            \             probeTimeout: 20\n              retry: 5\n              interval:
            20\n              probePollingInterval: 1\n            httpProbe/inputs:\n
            \             url: 'https://bigfix-webreports-0.{{workflow.parameters.DOMAIN}}.nip.io/login'\n
            \             insecureSkipVerify: true\n              responseTimeout:
            5000\n              method:\n                get:\n                  criteria:
            '=='\n                  responseCode: '200'\n          - name: BIGFIX-availability-end-probe\n
            \           type: httpProbe\n            mode: EOT\n            runProperties:\n
            \             probeTimeout: 20\n              retry: 1\n              interval:
            20\n              probePollingInterval: 1\n            httpProbe/inputs:\n
            \             url: 'https://bigfix-webreports-0.{{workflow.parameters.DOMAIN}}.nip.io/login'\n
            \             insecureSkipVerify: true\n              responseTimeout:
            5000\n              method:\n                get:\n                  criteria:
            '=='\n                  responseCode: '200'\n  annotationCheck: \"false\"\n"
    metadata:
      labels:
        weight: "10"
    name: node-drain-xoa
    outputs: {}
  tolerations:
  - effect: NoSchedule
    key: chaos
    operator: Equal
    value: "true"
status:
  finishedAt: null
  startedAt: null
